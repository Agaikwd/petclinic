pipeline {
  agent any
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
      }
  }
    stage('Build and Test') {
    agent{
      docker {
    image 'maven:3.9.7-eclipse-temurin-21-alpine'
    args '-u root'
    }
  }
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'mvn clean package'
      }
  }
    
    stage('Static Code Analysis') {
    agent{
      docker {
    image 'maven:3.9.7-eclipse-temurin-21-alpine'
    args '-u root'
    }
  }
      environment {
        SONAR_URL = "http://15.206.81.153:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
    agent{
      docker {
    image 'docker'        
    }
  }
      environment {
        DOCKER_IMAGE = "ashudhub/petclinic:${BUILD_NUMBER}"
        // DOCKERFILE_LOCATION = "Dockerfile"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh 'docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://hub.docker.com/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
            }
        }
    
  }
